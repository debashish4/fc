{"version":3,"sources":["store/index.js","store/reducers.js","store/action_types.js","network/api_constants.js","network/index.js","store/actions_creator.js","elements/button/index.js","elements/Input/index.js","components/Welcome/index.js","data.js","components/Option/index.js","config/firebase_config.js","components/Question/index.js","components/Result/index.js","elements/loaders/index.js","components/App.js","index.js"],"names":["combinedReducers","combineReducers","loader","action","type","payload","isFriend","console","log","authorKey","friendKey","friendAnswers","authorAnswers","friendName","authorName","questions","devTools","a","composed","compose","applyMiddleware","thunk","createStore","BASE_URL","getFriendAnswersFromKey","key","axios","method","baseURL","url","responseType","saveFriendName","showLoader","Button","props","size","color","onClick","disabled","className","children","Input","value","onChange","onInputChange","placeholder","Welcome","state","inputText","handleOnclick","match","params","path","saveFriendAnswers","history","saveFriendKey","saveAuthorName","id","then","push","handleInputTextChange","e","target","persist","setState","previousState","this","location","pathname","length","Component","connect","dispatch","getState","response","data","authorData","answers","name","alert","Option","src","alt","fbConfig","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Question","handleNextClick","counter","selectedOptionIndex","currentQuestion","question","options","saveAuthorAnswers","saveAuthorKey","ref","database","on","handleAnswerClick","questionId","selectedAns","saveQuestions","map","item","index","Result","friendScoreList","friendData","score","answered","totalQuestion","showResultRanOnce","_this","totalQuestions","getFriendsScoreList","shareLink","sL","window","origin","text","dummy","document","createElement","body","appendChild","select","execCommand","removeChild","copyToClipboard","friendsScores","allFriendScore","allScores","showShareLink","showFriendsScoreList","Loaders","App","exact","component","React","withRouter","ReactDOM","render","store","basename","getElementById"],"mappings":"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","file":"static/js/main.076dfc71.chunk.js","sourcesContent":["import { combineReducers, createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport * as reducers from './reducers';\n\nconst combinedReducers = combineReducers({\n    loader: reducers.showLoaderReducer,\n    isFriend: reducers.isFriendReducer,\n    authorKey: reducers.authorKeyReducer,\n    friendKey: reducers.friendKeyReducer,\n    friendAnswers: reducers.friendAnswersReducer,\n    authorAnswers: reducers.authorAnswersReducer,\n    friendName: reducers.friendNameReducer,\n    authorName: reducers.authorNameReducer,\n    questions: reducers.questionsReducer\n});\n\nconst devTools  = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__() : a => a\n\nconst composed = compose(applyMiddleware(thunk),devTools)\n\nexport default createStore(combinedReducers, composed);","import * as action_types from './action_types'\n\nexport const authorAnswersReducer = (authorAnswers = {}, action) => {\n    if (action.type === action_types.SAVE_AUTHOR_ANSWERS) {\n        console.log(\"action.payload\", action.payload);\n        return { ...action.payload }\n    }\n    return authorAnswers;\n}\n\n\nexport const friendAnswersReducer = (friendAnswers = {}, action) => {\n    if (action.type === action_types.SAVE_FRIEND_ANSWERS) {\n        console.log(\"action.payload\", action.payload);\n        return { ...action.payload }\n    }\n    return friendAnswers;\n}\n\nexport const isFriendReducer = (isFriend = false, action) => {\n    if (action.type === action_types.IS_FRIEND) {\n        console.log(\"action.payload\", action.payload);\n        return action.payload\n    }\n    return isFriend;\n}\n\nexport const showLoaderReducer = (loader = false, action) => {\n    if (action.type === action_types.SHOW_LOADER) {\n        return action.payload\n    }\n    return loader;\n}\n\nexport const authorKeyReducer = (authorKey = \"\", action) => {\n    if (action.type === action_types.SAVE_AUTHOR_KEY) {\n        return action.payload\n    }\n    return authorKey\n}\n\nexport const friendKeyReducer = (friendKey = \"\", action) => {\n    if (action.type === action_types.SAVE_FRIEND_KEY) {\n        return action.payload\n    }\n    return friendKey\n}\n\nexport const authorNameReducer = (authorName = \"\", action) => {\n    if (action.type === action_types.SAVE_AUTHOR_NAME) {\n        return action.payload\n    }\n    return authorName\n}\n\nexport const friendNameReducer = (friendName = \"\", action) => {\n    if (action.type === action_types.SAVE_FRIEND_NAME) {\n        return action.payload\n    }\n    return friendName\n}\n\nexport const questionsReducer = (questions = [], action) => {\n    if (action.type === action_types.SAVE_QUESTIONS) {\n        return action.payload\n    }\n    return questions\n}","export const SAVE_AUTHOR_ANSWERS = \"SAVE_AUTHOR_ANSWERS\";\nexport const SAVE_FRIEND_ANSWERS = \"SAVE_FRIEND_ANSWERS\";\nexport const IS_FRIEND = \"IS_FRIEND\";\nexport const SHOW_LOADER = \"SHOW_LOADER\";\nexport const SAVE_AUTHOR_KEY = \"SAVE_AUTHOR_KEY\";\nexport const SAVE_FRIEND_KEY = \"SAVE_FRIEND_KEY\";\nexport const SAVE_AUTHOR_NAME = \"SAVE_AUTHOR_NAME\";\nexport const SAVE_FRIEND_NAME = \"SAVE_FRIEND_NAME\";\nexport const SAVE_QUESTIONS = \"SAVE_QUESTIONS\";","export const BASE_URL = \"https://friendship-meter.firebaseio.com/\";","import axios from 'axios';\nimport {BASE_URL} from './api_constants';\n\nexport const getFriendAnswersFromKey = (key) => {\n    return axios({\n        method: 'get',\n        baseURL:BASE_URL,\n        url: `${key}.json`,\n        responseType: 'stream'\n    })\n}\n\n\nexport const getAllFriendsAnswers = (key) => {\n    return axios({\n        method: 'get',\n        baseURL:BASE_URL,\n        url: `${key}/friendsAnswers.json`,\n        responseType: 'stream'\n    })\n}\n\n","import * as action_types from '../store/action_types'\nimport { getFriendAnswersFromKey } from '../network'\n\n\nexport const saveAuthorAnswers = (payload) => {\n    return {\n        type: action_types.SAVE_AUTHOR_ANSWERS,\n        payload\n    }\n}\n\nexport const saveAuthorKey = (payload) => {\n    return {\n        type: action_types.SAVE_AUTHOR_KEY,\n        payload\n    }\n}\n\nexport const saveFriendKey = (payload) => {\n    return {\n        type: action_types.SAVE_FRIEND_KEY,\n        payload\n    }\n}\n\nexport const saveFriendName = (payload) => {\n    return {\n        type: action_types.SAVE_FRIEND_NAME,\n        payload\n    }\n}\n\nexport const saveAuthorName = (payload) => {\n    return {\n        type: action_types.SAVE_AUTHOR_NAME,\n        payload\n    }\n}\n\nexport const saveQuestions = (payload) => {\n    return {\n        type: action_types.SAVE_QUESTIONS,\n        payload\n    }\n}\n\nexport const saveFriendAnswers = (payload = \"\") => async (dispatch, getState) => {\n    return getFriendAnswersFromKey(payload).then(function (response) {\n        console.log(response.data);\n        if (response.data !== null) {\n            const { answers, name } = response.data.authorData;\n\n            dispatch({\n                type: action_types.IS_FRIEND,\n                payload: true\n            })\n            dispatch({\n                type: action_types.SAVE_FRIEND_ANSWERS,\n                payload: answers\n            })\n            dispatch(saveFriendName(name))\n        } else {\n            dispatch(showLoader(false));\n            alert(\"Cannot login. Please check URL or Internet connection\");\n        }\n        return getState().isFriend;\n    });\n}\n\nexport const showLoader = (payload = false) => {\n    return {\n        type: action_types.SHOW_LOADER,\n        payload\n    }\n}","import React from 'react';\n\nconst Button = (props) => {\n    console.log(\"button component rendering\");\n    const { size, color, onClick, disabled } = props;\n    return (\n        <button onClick={onClick} className={`button  ${size} ${color}`} disabled={disabled}>{props.children}</button>\n    )\n}\nexport default Button;","import React from 'react';\n\nconst Input = (props) => (\n    <input className=\"input is-primary\" value={props.value} onChange={props.onInputChange} type=\"text\" placeholder=\"Enter your Name\" />\n)\nexport default Input;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { saveFriendAnswers, showLoader, saveFriendKey, saveAuthorName } from '../../store/actions_creator';\nimport Button from '../../elements/button';\nimport Input from '../../elements/Input';\nimport \"./welcome.css\";\n\nclass Welcome extends Component {\n    state = {\n        inputText: ''\n    }\n\n    componentDidMount() {\n        const { pathname } = this.props.location;\n        console.log(this.props);\n    }\n    handleOnclick = () => {\n        const { match: { params, path }, saveFriendAnswers, history, showLoader, saveFriendKey, saveAuthorName } = this.props;\n        showLoader(true);\n        console.log(this.state.inputText);\n        saveAuthorName(this.state.inputText);\n        if (params.id && path === \"/quiz/:id\") {\n            saveFriendAnswers(params.id).then((isFriend) => {\n                if (isFriend) {\n                    saveFriendKey(params.id);\n                    history.push(\"/question\");\n                    showLoader(false);\n                }\n            });\n        } else {\n            if (path === \"/\") {\n                history.push(\"/question\");\n                showLoader(false);\n            }\n        }\n\n    }\n    handleInputTextChange = (e) => {\n        console.log(e.target.value);\n        e.persist();\n        this.setState((previousState) => ({\n            ...previousState,\n            inputText: e.target.value\n        }))\n    }\n    render() {\n        return (\n            <div className=\"welcome-cmp\">\n                <div className=\"container v-center\">\n                    <div className=\"box v-center\">\n                        <div className=\"field \">\n                            <div className=\"control\">\n                                <Input value={this.state.inputText} onInputChange={this.handleInputTextChange} />\n                            </div>\n                            <div className=\"btn-add\">\n                                <Button disabled={this.state.inputText.length ? false : true} size=\"is-small\" color=\"is-primary\" onClick={this.handleOnclick}>Start</Button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = ({ isFriend }) => ({\n    isFriend\n})\n\nexport default connect(mapStateToProps, { saveFriendAnswers, showLoader, saveFriendKey, saveAuthorName })(Welcome)","const questions = [\n    {\n        \"question\": \"Which of these describe your character?\",\n        \"id\": \"q_1\",\n        \"options\": [\n            \"Funny\",\n            \"Kind\",\n            \"Serious\",\n            \"Happy\"\n        ]\n    },\n    {\n        \"question\": \"Do you prefer cats, dogs, or neither?\",\n        \"id\": \"q_2\",\n        \"options\": [\n            \"Cat\",\n            \"Dog\",\n            \"Neither\",\n            \"Friendly\"\n        ]\n    },\n    {\n        \"question\": \"What did you wanted to be when you were a kid?\",\n        \"id\": \"q_3\",\n        \"options\": [\n            \"Doctor\",\n            \"Actor\",\n            \"Teacher\",\n            \"Singer\",\n            \"Engineer\"\n        ]\n    },\n    // {\n    //     \"question\": \"If you get an opportunity for an adventurous journey, who would you prefer?\",\n    //     \"id\": \"q_4\",\n    //     \"options\": [\n    //         \"Friends\",\n    //         \"Family\",\n    //         \"Alone\",\n    //         \"Soulmate\"\n    //     ]\n    // },\n    // {\n    //     \"question\": \"What is your favorite ice cream flavor?\",\n    //     \"id\": \"q_5\",\n    //     \"options\": [\n    //         \"Chocolate\",\n    //         \"Vanilla\",\n    //         \"Butterscotch\",\n    //         \"Strawberry\"\n    //     ]\n    // },\n    // {\n    //     \"question\": \"What is your favorite thing to do with your leisure time?\",\n    //     \"id\": \"q_6\",\n    //     \"options\": [\n    //         \"Reading\",\n    //         \"Walking\",\n    //         \"Gardening\",\n    //         \"Sewing\",\n    //         \"Writing\",\n    //         \"Drawing\"\n    //     ]\n    // },\n    // {\n    //     \"question\": \"What is one thing/activity that makes you relax?\",\n    //     \"id\": \"q_7\",\n    //     \"options\": [\n    //         \"Dancing\",\n    //         \"Listening music\",\n    //         \"Go for a drive\",\n    //         \"Sleeping\",\n    //         \"Reading\"\n    //     ]\n    // },\n    // {\n    //     \"question\": \"What is something you look forward to doing when you retire?\",\n    //     \"id\": \"q_8\",\n    //     \"options\": [\n    //         \"Spend quality time\",\n    //         \"Travel\",\n    //         \"Get a hobby\",\n    //         \"Volunteer\"\n    //     ]\n    // },\n    // {\n    //     \"question\": \"What season is your favorite?\",\n    //     \"id\": \"q_9\",\n    //     \"options\": [\n    //         \"Summer\",\n    //         \"Rainy\",\n    //         \"Winter\",\n    //         \"Autumn\"\n    //     ]\n    // },\n    // {\n    //     \"question\": \"What was your favorite childhood television show?\",\n    //     \"id\": \"q_10\",\n    //     \"options\": [\n    //         \"School Days\",\n    //         \"Shaktimaan\",\n    //         \"Malgudi Days\"\n    //     ]\n    // },\n    // {\n    //     \"question\": \"What is one thing you are always losing?\",\n    //     \"id\": \"q_11\",\n    //     \"options\": [\n    //         \"Keys\",\n    //         \"Headphones\",\n    //         \"Umbrella\",\n    //         \"Password\",\n    //         \"Pen caps\"\n    //     ]\n    // },\n    // {\n    //     \"question\": \"What is your favorite music genre?\",\n    //     \"id\": \"q_12\",\n    //     \"options\": [\n    //         \"Hip Hop\",\n    //         \"Rock\",\n    //         \"Pop\",\n    //         \"Heavy Metal\",\n    //         \"Folk\"\n    //     ]\n    // },\n    // {\n    //     \"question\": \"What your favorite movie genre?\",\n    //     \"id\": \"q_13\",\n    //     \"options\": [\n    //         \"Horror\",\n    //         \"Action\",\n    //         \"Romantic\",\n    //         \"Comedy\"\n    //     ]\n    // },\n    // {\n    //     \"question\": \"Do you prefer the beach or the mountains?\",\n    //     \"id\": \"q_14\",\n    //     \"options\": [\n    //         \"Beach\",\n    //         \"Mountain\"\n    //     ]\n    // },\n    // {\n    //     \"question\": \"What is your favorite sport?\",\n    //     \"id\": \"q_15\",\n    //     \"options\": [\n    //         \"Tennis\",\n    //         \"Hockey\",\n    //         \"Football\",\n    //         \"Cricket\"\n    //     ]\n    // },\n    // {\n    //     \"question\": \"Where is your favorite vacation spot?\",\n    //     \"id\": \"q_16\",\n    //     \"options\": [\n    //         \"Nainital\",\n    //         \"Ladakh\",\n    //         \"Manali\",\n    //         \"Shimla\",\n    //         \"kerela\"\n    //     ]\n    // },\n    // {\n    //     \"question\": \"Have you ever cheated on a test?\",\n    //     \"id\": \"q_17\",\n    //     \"options\": [\n    //         \"Yes\",\n    //         \"No\"\n    //     ]\n    // },\n    // {\n    //     \"question\": \"How do you like to click pictures?\",\n    //     \"id\": \"q_18\",\n    //     \"options\": [\n    //         \"Selfie\",\n    //         \"Pose\"\n    //     ]\n    // },\n    // {\n    //     \"question\": \"What is more important to you?\",\n    //     \"id\": \"q_19\",\n    //     \"options\": [\n    //         \"Love\",\n    //         \"Money\"\n    //     ]\n    // },\n    // {\n    //     \"question\": \"Have you ever lied about being sick so you could stay home from work or school?\",\n    //     \"id\": \"q_20\",\n    //     \"options\": [\n    //         \"No\",\n    //         \"Yes\"\n    //     ]\n    // },\n    // {\n    //     \"question\": \"Do you like veg or non-veg?\",\n    //     \"id\": \"q_21\",\n    //     \"options\": [\n    //         \"Veg\",\n    //         \"Non veg\"\n    //     ]\n    // },\n    // {\n    //     \"question\": \"Which life is best?\",\n    //     \"id\": \"q_22\",\n    //     \"options\": [\n    //         \"Committed\",\n    //         \"One sided\",\n    //         \"Married\",\n    //         \"Single\"\n    //     ]\n    // },\n    // {\n    //     \"question\": \"Which one you drink most?\",\n    //     \"id\": \"q_23\",\n    //     \"options\": [\n    //         \"Cold Coffee\",\n    //         \"Tea\",\n    //         \"Hot coffee\",\n    //         \"Cold Drink\"\n    //     ]\n    // },\n    // {\n    //     \"question\": \"Which type of shopping do you like?\",\n    //     \"id\": \"q_23\",\n    //     \"options\": [\n    //         \"Traditional\",\n    //         \"Online Shopping\"\n    //     ]\n    // },\n    // {\n    //     \"question\": \"Have you ever sent an inappropriate text to your mom or dad by accident?\",\n    //     \"id\": \"q_24\",\n    //     \"options\": [\n    //         \"No\",\n    //         \"Yes\"\n    //     ]\n    // },\n    // {\n    //     \"question\": \"What was your favorite subject in school?\",\n    //     \"id\": \"q_25\",\n    //     \"options\": [\n    //         \"Science\",\n    //         \"Math\",\n    //         \"History\",\n    //         \"Geography\"\n    //     ]\n    // },\n    // {\n    //     \"question\": \"Which type of wedding do you like?\",\n    //     \"id\": \"q_26\",\n    //     \"options\": [\n    //         \"Simple Marriage\",\n    //         \"Registry marriage\",\n    //         \"At Mandir\"\n    //     ]\n    // },\n    // {\n    //     \"question\": \"What is one job you would never want to do?\",\n    //     \"id\": \"q_27\",\n    //     \"options\": [\n    //         \"Fish Market\",\n    //         \"Coal Miner\",\n    //         \"Carcass Removal\",\n    //         \"Doctor\",\n    //         \"Engineer\"\n    //     ]\n    // },\n    // {\n    //     \"question\": \"Do have rings in hands?\",\n    //     \"id\": \"q_28\",\n    //     \"options\": [\n    //         \"Yes\",\n    //         \"No\"\n    //     ]\n    // },\n    // {\n    //     \"question\": \"What is the one thing you dislike about yourself?\",\n    //     \"id\": \"q_29\",\n    //     \"options\": [\n    //         \"Temper\",\n    //         \"Appearance\",\n    //         \"Comparison\",\n    //         \"Careless\"\n    //     ]\n    // },\n    // {\n    //     \"question\": \"What do you use the most?\",\n    //     \"id\": \"q_30\",\n    //     \"options\": [\n    //         \"Instagram\",\n    //         \"WhatsApp\",\n    //         \"Tiktok\",\n    //         \"Facebook\"\n    //     ]\n    // },\n    // {\n    //     \"question\": \"What is your favorite drink?\",\n    //     \"id\": \"q_31\",\n    //     \"options\": [\n    //         \"Tea\",\n    //         \"Juice\",\n    //         \"Water\",\n    //         \"Coffee\",\n    //         \"Milk\",\n    //         \"Alcohol\"\n    //     ]\n    // }\n]\n\nexport default questions;","import React from 'react';\nimport './option.css';\n\nexport default Option = (props) => {\n    return (\n        <div className=\"card cmp-option\" onClick={props.onClick}>\n            <div className=\"card-image\">\n                <figure className=\"image\">\n                    <img src=\"https://bulma.io/images/placeholders/1280x960.png\" alt={props.children} />\n                </figure>\n            </div>\n            <div className=\"card-content\">\n                <div className=\"media\">\n\n                    <div className=\"media-content\">\n                        <p className=\"title is-4\">{props.children || 'default text'}</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}","// Firebase App (the core Firebase SDK) is always required and must be listed first\nimport * as firebase from \"firebase/app\";\nimport database  from \"firebase/database\"\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyA1Cab5jmVihKiv9A67QnPH9SPCI_KmHik\",\n    authDomain: \"friendship-meter.firebaseapp.com\",\n    databaseURL: \"https://friendship-meter.firebaseio.com\",\n    projectId: \"friendship-meter\",\n    storageBucket: \"friendship-meter.appspot.com\",\n    messagingSenderId: \"610503930438\",\n    appId: \"1:610503930438:web:4a15eff3e610e6e013d047\"\n  };\n\n  const fbConfig = firebase.initializeApp(firebaseConfig);\n  export default fbConfig;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport questions from \"../../data\";\nimport Button from \"../../elements/button\";\nimport Option from \"../Option\";\nimport { saveAuthorAnswers, saveAuthorKey, saveQuestions } from '../../store/actions_creator';\nimport fbConfig from '../../config/firebase_config';\nimport './question.css';\n\nclass Question extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentQuestion: {\n                answers: {},\n                id: null,\n                question: \"\",\n                options: []\n            },\n            selectedOptionIndex: null,\n            authorAnswers: {}\n        };\n        this.counter = 0;\n        this.questions = [];\n    }\n    componentDidMount() {\n        const { saveQuestions } = this.props;\n        saveQuestions([...questions]);\n        this.questions = [...questions];\n\n        console.log('questions', this.questions);\n        this.setState({\n            currentQuestion: {\n                question: this.questions[this.counter].question,\n                id: this.questions[this.counter].id,\n                options: [...this.questions[this.counter].options],\n            }\n        })\n    }\n    handleNextClick = () => {\n        this.counter = this.counter + 1;\n        this.setState({\n            selectedOptionIndex: null\n        })\n        if (this.counter < (this.questions.length)) {\n            this.setState({\n                currentQuestion: {\n                    question: this.questions[this.counter].question,\n                    id: this.questions[this.counter].id,\n                    options: [...this.questions[this.counter].options]\n                }\n            });\n        } else {\n            const { saveAuthorAnswers, history, saveAuthorKey, isFriend, authorKey, authorName, friendKey, friendAnswers } = this.props;\n            saveAuthorAnswers(this.state.authorAnswers);\n            if (!isFriend) {\n                const authorData = {\n                    name: authorName,\n                    answers: this.state.authorAnswers\n                }\n                let ref = fbConfig.database().ref(`/${authorKey}`).push({ authorData });\n                console.log(ref);\n                ref.on(\"value\", function (data) {\n                    console.log(\"res data\", data);\n                    saveAuthorKey(data.key);\n                })\n            }\n            history.push('/result');\n            this.counter = 0 // Resetting counter back to 0 \n        }\n    }\n\n    // handleBackClick = () => {\n    //     if ((this.counter < this.questions.length) && (this.counter > 0)) {\n    //         this.counter = this.counter - 1;\n    //         this.setState({\n    //             currentQuestion: {\n    //                 question: this.questions[this.counter].question,\n    //                 id: this.questions[this.counter].id,\n    //                 options: [...this.questions[this.counter].options]\n    //             }\n    //         });\n    //     }\n    // }\n\n    handleAnswerClick = (questionId, selectedAns, selectedOptionIndex) => {\n        this.setState({\n            selectedOptionIndex,\n            authorAnswers: { ...this.state.authorAnswers, [questionId]: selectedAns }\n        });\n    }\n\n    render() {\n        console.log(this.counter);\n        const { selectedOptionIndex } = this.state;\n        // ${isSelected ? 'selected-option' : ''}\n        return (\n            <div className=\"cmp-question\">\n                <p className=\"question\">{this.state.currentQuestion.question}</p>\n                <div className=\"q-option-container is-flex\">{this.state.currentQuestion.options.map((item, index) => {\n                    return <div key={index} className={`q-option ${selectedOptionIndex === index ? 'selected-option' : ''}`}>\n                        <Option onClick={(e) => this.handleAnswerClick(this.state.currentQuestion.id, item, index)} >{item}</Option>\n                    </div>\n                })}</div>\n                <div className=\"controls\">\n                    {/* <Button color=\"is-link is-light is-large\" className=\"button back\" onClick={this.handleBackClick}>Back</Button> */}\n                    <Button disabled={selectedOptionIndex !== null ? false : true} color=\"is-primary is-light\" size=\"is-large\" onClick={this.handleNextClick}>{this.counter === (this.questions.length - 1) ? \"Submit\" : \"Next\"}</Button>\n                </div>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = ({ isFriend, authorKey, authorName, friendKey, friendAnswers }) => ({\n    isFriend,\n    authorName,\n    authorKey,\n    friendKey,\n    friendAnswers\n})\nexport default connect(mapStateToProps, { saveAuthorAnswers, saveAuthorKey, saveQuestions })(Question);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Button from '../../elements/button';\nimport fbConfig from '../../config/firebase_config';\nimport { getAllFriendsAnswers } from '../../network';\nimport './result.css';\n\nclass Result extends Component {\n\n\n    state = {\n        friendScoreList: [],\n        friendData: {\n            name: \"\",\n            answers: {},\n            score: {\n                answered: \"\",\n                totalQuestion: \"\"\n            }\n        }\n    }\n    showResultRanOnce = false;\n\n    componentDidMount() {\n        const { friendKey, authorName, authorAnswers, friendAnswers, questions, isFriend } = this.props;\n        let totalQuestion = questions.length;\n        console.log(friendAnswers);\n        let answered = 0;\n        let friendAns = null;\n        let _this = this;\n\n        for (let key in authorAnswers) {\n            if (authorAnswers[key] == friendAnswers[key]) answered += 1;\n        }\n\n        this.setState({\n            friendData: {\n                name: authorName,\n                answers: authorAnswers,\n                score: {\n                    answered,\n                    totalQuestion\n                }\n            }\n        }, () => {\n            friendAns = fbConfig.database().ref(`/${friendKey}/friendsAnswers`).push({ name: _this.state.friendData.name, answered: _this.state.friendData.score.answered, totalQuestions: _this.state.friendData.score.totalQuestion });\n            friendAns.then(() => {\n                this.getFriendsScoreList();\n            })\n        })\n    }\n    showShareLink(shareLink) {\n        function copyToClipboard(text) {\n            var dummy = document.createElement(\"textarea\");\n            // to avoid breaking orgain page when copying more words\n            // cant copy when adding below this code\n            // dummy.style.display = 'none'\n            document.body.appendChild(dummy);\n            //Be careful if you use texarea. setAttribute('value', value), which works with \"input\" does not work with \"textarea\". – Eduard\n            dummy.value = text;\n            dummy.select();\n            document.execCommand(\"copy\");\n            document.body.removeChild(dummy);\n        }\n\n        let sL = `${window.location.origin}/quiz/${shareLink}`;\n\n        return <div className=\"share-link-container\">\n            <p className=\"msg-thanks\">Thanks for playing! </p>\n            <p className=\"msg-info\">Now share the below link with your friends/family and find out how well they know you.</p>\n            <p className=\"share-link-code\" disabled={true}>{sL}</p>\n            <Button color=\"is-link is-light is-large\" onClick={() => copyToClipboard(sL)}>Copy</Button>\n        </div>\n\n    }\n\n    getFriendsScoreList() {\n        console.log(\"showFriendsScoreList\");\n        const { friendKey } = this.props;\n        let _this = this;\n        getAllFriendsAnswers(friendKey).then(function (friendsScores) {\n            const allFriendScore = [];\n            const allScores = friendsScores.data;\n            console.log(\"fd\", allScores);\n            for (let key in allScores) {\n                allFriendScore.push({ key, name: allScores[key].name, answered: allScores[key].answered, totalQuestions: allScores[key].totalQuestions })\n            }\n            console.log(\"allFriendScore\", allFriendScore);\n            _this.setState({\n                friendScoreList: [...allFriendScore]\n            })\n        });\n\n    }\n    showFriendsScoreList(friendScoreList) {\n        return this.state.friendScoreList ? (<table className=\"table\">\n            <thead>\n                <tr>\n                    <th>Name</th>\n                    <th>Score</th>\n                </tr>\n            </thead>\n            <tbody>\n                {friendScoreList.map(item => <tr key={item.key}>\n                    <td>{item.name}</td>\n                    <td>{item.answered}</td>\n                </tr>)}\n            </tbody>\n        </table>) : '';\n    }\n    render() {\n        console.log(\"rendering again\", this.showResultRanOnce);\n        const { authorKey, friendKey, authorName, authorAnswers, friendAnswers, questions, isFriend } = this.props;\n        const { score: { answered, totalQuestion } } = this.state.friendData;\n        return (\n            <div className=\"cmp-result\">\n                <div>\n                    {/* {isFriend ? this.showResult(authorName, authorAnswers, friendAnswers, questions, friendKey) : this.showShareLink(authorKey)} */}\n                    {isFriend ? (<div className=\"score-container v-center\">\n                        <h4 className=\"score-title\">Your score</h4>\n                        <p className=\"score-data\">\n                            {answered}/{totalQuestion}\n                        </p>\n                    </div>) : this.showShareLink(authorKey)}\n                </div>\n                <div>\n                    {isFriend ? this.showFriendsScoreList(this.state.friendScoreList) : \"\"}\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    const { authorName, authorKey, friendKey, authorAnswers, friendAnswers, questions, isFriend } = state;\n    return {\n        authorName,\n        authorKey,\n        friendKey,\n        authorAnswers,\n        friendAnswers,\n        questions,\n        isFriend\n    }\n}\n\nexport default connect(mapStateToProps)(Result);","import React from 'react';\nimport './loaders.css';\n\nexport default function Loaders() {\n    return (\n        <div className=\"loader-container v-center h-center\">\n            <div className=\"spinner\">\n                <div className=\"double-bounce1\"></div>\n                <div className=\"double-bounce2\"></div>\n            </div>\n        </div>    \n    )\n}","import React from 'react';\nimport { Route, withRouter, Switch } from 'react-router-dom';\nimport {compose} from 'redux';\nimport {connect} from 'react-redux';\nimport Welcome from './Welcome';\nimport Question from './Question';\nimport Result from './Result';\nimport Loaders from '../elements/loaders';\nimport \"../styles/bulma.min.css\";\nimport \"../styles/helpers.css\"\n\nclass App extends React.Component {\n    render() {\n        const {loader} = this.props;\n        console.log({loader});\n        return (\n            <div>\n                <Switch>\n                    <Route exact path=\"/\" component={Welcome}></Route>\n                    <Route path=\"/question\" component={Question}></Route>\n                    <Route path=\"/result\" component={Result}></Route>\n                    <Route path=\"/quiz/:id\" component={Welcome}></Route>\n                </Switch>\n                {loader ? <Loaders></Loaders> : ''}\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = ({loader}) => {\n    return {\n        loader\n    }\n}\n\nexport default compose(\n    withRouter,\n    connect(mapStateToProps)\n  )(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport store from './store'\nimport App from './components/App';\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter basename=\"/friendshipMeter\">\n            <App />\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById(\"root\")\n);"],"sourceRoot":""}